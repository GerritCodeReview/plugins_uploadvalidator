{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "739ed5d1_aaaf98ec",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 10,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2020-10-15T03:58:11Z",
      "side": 1,
      "message": "Interesting. I think what you\u0027re saying is that if project.config contains\n\n  [plugin \"uploadvalidator\"]\n    project \u003d ...some complex regex...\n\nthis new setting would allow simplifying that.\n\nhttps://gerrit.googlesource.com/plugins/uploadvalidator/+/HEAD/src/main/resources/Documentation/config.md tells me I can configure the plugin in project.config; I wonder if we could simplify it via a setting\n\n  [plugin \"uploadvalidator\"]\n     disable \u003d true\n\nthat gets set on a repository where we want to disable it and gets inherited. What do you think?",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 43
      },
      "revId": "6a7d45beb7c35fc865c9e2dea08c12655945900f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2a222681_f5421dab",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 10,
      "author": {
        "id": 1070962
      },
      "writtenOn": "2020-10-15T18:40:42Z",
      "side": 1,
      "message": "The issue with having inheritance control when the plugin is enabled makes it hard to manage. With all the config at a single level it\u0027s easy to the person managing the banned words to see where it will apply instead of having to go check every projects config to see if it is actually enabled.",
      "parentUuid": "739ed5d1_aaaf98ec",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 43
      },
      "revId": "6a7d45beb7c35fc865c9e2dea08c12655945900f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f6bc0253_425fee3c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2020-10-23T01:43:36Z",
      "side": 1,
      "message": "I think the `project`, `disabledProject` pair is still a bit hard to manage.\n\nIs the issue with having `disable \u003d true` in the per-repository configuration that it\u0027s hard to collect the configuration from all repos? That seems like a more generally applicable problem; feel free to reach out to me on internal forums so we can look at how to tackle it more broadly.",
      "revId": "6a7d45beb7c35fc865c9e2dea08c12655945900f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93fb454e_92e00bb5",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 6
      },
      "lineNbr": 102,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2020-10-15T03:58:11Z",
      "side": 1,
      "message": "This comment restates what the code says --- it makes it harder to read, in my opinion.\n\nWould something like\n\n  if (conf \u003d\u003d null  // no config was retrieved\n                       ^^ but why? Does that mean no config was *present*?\n      || !isValidConfig(conf, projectName)\n      || isDisabledValidatorOp(conf, validaterOp)  // validator was explicitly disabled\n      || isDisabledForProject(conf, projectName.get())  // validation on project disabled\n      || !activeForRef(conf, refName))\n      || ...) {\n    return false;\n  }\n\nmake sense?",
      "revId": "6a7d45beb7c35fc865c9e2dea08c12655945900f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4627228_6ba4a4f3",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 6
      },
      "lineNbr": 102,
      "author": {
        "id": 1070962
      },
      "writtenOn": "2020-10-15T18:40:42Z",
      "side": 1,
      "message": "I guess I can revert back? Maybe it\u0027s just me but it\u0027s not worth the compactness of having everything in one giant block (like I spent 5 solid minutes just staring at it getting lost). It\u0027s must easier for me at least to follow this fallthrough type pattern even though it\u0027s more verbose.",
      "parentUuid": "93fb454e_92e00bb5",
      "revId": "6a7d45beb7c35fc865c9e2dea08c12655945900f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20a4c874_4eb90d3d",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 6
      },
      "lineNbr": 102,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2020-10-23T01:43:36Z",
      "side": 1,
      "message": "Yes, I think getting back to using || (but perhaps avoiding the nesting if that makes it easier to read?) would make it more readable.",
      "parentUuid": "d4627228_6ba4a4f3",
      "revId": "6a7d45beb7c35fc865c9e2dea08c12655945900f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4326c106_30385cca",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 6
      },
      "lineNbr": 113,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2020-10-15T03:58:11Z",
      "side": 1,
      "message": "What\u0027s the difference between isDisabledForProject and !activeForProject?",
      "range": {
        "startLine": 113,
        "startChar": 8,
        "endLine": 113,
        "endChar": 28
      },
      "revId": "6a7d45beb7c35fc865c9e2dea08c12655945900f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cbe22347_b3f8c977",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 6
      },
      "lineNbr": 113,
      "author": {
        "id": 1070962
      },
      "writtenOn": "2020-10-15T18:40:42Z",
      "side": 1,
      "message": "I can move the disabled check login into the activeForProject method so this is less confusing.",
      "parentUuid": "4326c106_30385cca",
      "range": {
        "startLine": 113,
        "startChar": 8,
        "endLine": 113,
        "endChar": 28
      },
      "revId": "6a7d45beb7c35fc865c9e2dea08c12655945900f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "765e705d_1ed45604",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 6
      },
      "lineNbr": 113,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2020-10-23T01:43:36Z",
      "side": 1,
      "message": "Sounds good.",
      "parentUuid": "cbe22347_b3f8c977",
      "range": {
        "startLine": 113,
        "startChar": 8,
        "endLine": 113,
        "endChar": 28
      },
      "revId": "6a7d45beb7c35fc865c9e2dea08c12655945900f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "6a7d45beb7c35fc865c9e2dea08c12655945900f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Submit",
        "description": {
          "value": "Changes that have DO NOT SUBMIT in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "6a7d45beb7c35fc865c9e2dea08c12655945900f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable. Unless overriden by adding the hashtag allow-unresolved-comments."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "hashtag:allow-unresolved-comments"
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:unresolved"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["has:unresolved"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"hashtag:allow-unresolved-comments"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["hashtag:allow-unresolved-comments"]}
      },
      "patchSetCommitId": "6a7d45beb7c35fc865c9e2dea08c12655945900f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "6a7d45beb7c35fc865c9e2dea08c12655945900f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI result status for build and tests is passing"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "6a7d45beb7c35fc865c9e2dea08c12655945900f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}