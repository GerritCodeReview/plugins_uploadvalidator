{
  "comments": [
    {
      "key": {
        "uuid": "e8e9aa6a_a214befa",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 14
      },
      "lineNbr": 75,
      "author": {
        "id": 1012623
      },
      "writtenOn": "2017-01-21T01:47:02Z",
      "side": 1,
      "message": "This seems inconsistent with the documentation.  The doc says `skipBranch` can be ref names, ref patterns, or regular expressions however it looks like this method only matches on exact ref name.  Probably should either add those additional matching features or update the docs.",
      "revId": "f7a5ff963cca5a950e0e72c5ef399d5be0ee0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "486b96ff_7889fd0a",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 14
      },
      "lineNbr": 75,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-01-23T10:20:42Z",
      "side": 1,
      "message": "good catch\n\nI think that it makes not much sense to try to (re)use the skipValidationBasedOn method for both skipValidation and skipBranch\nas they require different logic (plain string comparison vs more complex logic for branch name matching).",
      "revId": "f7a5ff963cca5a950e0e72c5ef399d5be0ee0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c2dbc3b_fc8f2769",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 14
      },
      "lineNbr": 75,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2017-01-25T08:42:15Z",
      "side": 1,
      "message": "Fair enough, let me align it using regex as well for refs.",
      "revId": "f7a5ff963cca5a950e0e72c5ef399d5be0ee0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6d87bb0_d7b4574d",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 14
      },
      "lineNbr": 75,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2017-01-25T09:55:44Z",
      "side": 1,
      "message": "Done",
      "revId": "f7a5ff963cca5a950e0e72c5ef399d5be0ee0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2864a22d_77890a0b",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 14
      },
      "lineNbr": 76,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-01-23T10:20:42Z",
      "side": 1,
      "message": "This is the cheapest and the most important check which should be done before checking anything else like branch names pattern mathinc, skipValidation, etc..\n\nCan this be checked at the line 48?",
      "range": {
        "startLine": 76,
        "startChar": 8,
        "endLine": 76,
        "endChar": 30
      },
      "revId": "f7a5ff963cca5a950e0e72c5ef399d5be0ee0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4f412a1_bf7ca7b8",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 14
      },
      "lineNbr": 76,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2017-01-25T08:42:15Z",
      "side": 1,
      "message": "It was like that before, but then DavidO pointed out that typically people would restrict only on specific branches that are hit only sporadically. That\u0027s why the branch has now priority over the chain.\n\nCan we discuss and come to a conclusion?\nTo be honest with you, all projects are different and it\u0027s hard to say that the most of the validations would be on group or branch level.\n\nThe answer to \"which is the cheapest check?\" it most of the times \"it depends ...\"",
      "range": {
        "startLine": 76,
        "startChar": 8,
        "endLine": 76,
        "endChar": 30
      },
      "revId": "f7a5ff963cca5a950e0e72c5ef399d5be0ee0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5eaf1ac3_34e5206b",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 14
      },
      "lineNbr": 76,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-01-25T09:41:33Z",
      "side": 1,
      "message": "I think that the point of DavidO was to avoid checking group membership too early.\nMy proposal is to first check skipGroup.length, without actually checking any group membership at that point. According to the documentation, if no skipGroup is defined then other skip* settings are ignored.\n\nI don\u0027t think that my and David\u0027s proposals are contradicting. I am not proposing to check group membership early, just if any skipGroup is defined. After that, you can first check for branch pattern matching, because it is cheaper than group membership matching.",
      "revId": "f7a5ff963cca5a950e0e72c5ef399d5be0ee0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe81cf7a_f5936aa4",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 14
      },
      "lineNbr": 76,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-01-25T09:49:33Z",
      "side": 1,
      "message": "\u003e I think that the point of DavidO was to avoid checking group\n \u003e membership too early.\n\nYes exactly.\n\n \u003e I don\u0027t think that my and David\u0027s proposals are contradicting.\n\n+1",
      "revId": "f7a5ff963cca5a950e0e72c5ef399d5be0ee0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d782e44_b9ab1c08",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 14
      },
      "lineNbr": 76,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2017-01-25T09:55:44Z",
      "side": 1,
      "message": "Done",
      "range": {
        "startLine": 76,
        "startChar": 8,
        "endLine": 76,
        "endChar": 30
      },
      "revId": "f7a5ff963cca5a950e0e72c5ef399d5be0ee0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b46dcb6d_e3eb36c2",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 14
      },
      "lineNbr": 76,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2017-01-25T09:55:44Z",
      "side": 1,
      "message": "WIll move it at next PS.",
      "range": {
        "startLine": 76,
        "startChar": 8,
        "endLine": 76,
        "endChar": 30
      },
      "revId": "f7a5ff963cca5a950e0e72c5ef399d5be0ee0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "48ad6bb7_26e841fa",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 14
      },
      "lineNbr": 76,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2017-01-25T09:58:12Z",
      "side": 1,
      "message": "Yes, one thing is group membership and a different one is if the groups are configured at all :-)\n\nI have split the check into two methods invoked at different times.",
      "revId": "f7a5ff963cca5a950e0e72c5ef399d5be0ee0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "486b96ff_588ec114",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 14
      },
      "lineNbr": 103,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-01-23T10:20:42Z",
      "side": 1,
      "message": "optional:\n\nThe skipGroup.length \u003d\u003d 0 should have been checked already before calling this method (and before calling any other check) as all other settings have no effect when skipGroup is empty.\n\nIMO, this (private) method should only be called when we really need to check skipping on group which means when skipGroup.length \u003e 0",
      "range": {
        "startLine": 101,
        "startChar": 0,
        "endLine": 103,
        "endChar": 5
      },
      "revId": "f7a5ff963cca5a950e0e72c5ef399d5be0ee0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c0b73917_3ab28282",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 14
      },
      "lineNbr": 103,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2017-01-25T08:42:15Z",
      "side": 1,
      "message": "Yes, can be split into two different methods:\n- isSkipConfigured\n- canSkipOnGroup\n\nI am unsure about the real runtime performance improvement in that however: you still need to make a method call that is negligible in terms of performance improvement over a Git push operation.",
      "range": {
        "startLine": 101,
        "startChar": 0,
        "endLine": 103,
        "endChar": 5
      },
      "revId": "f7a5ff963cca5a950e0e72c5ef399d5be0ee0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "af0b4f07_e6869501",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 14
      },
      "lineNbr": 103,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-01-25T09:47:56Z",
      "side": 1,
      "message": "Checking group membership is potentially much more expensive than isSkipConfigured and branch pattern matching, as it might involve sending a query to a group backend (LDAP...).",
      "revId": "f7a5ff963cca5a950e0e72c5ef399d5be0ee0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e1fd3984_012c0844",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 14
      },
      "lineNbr": 103,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2017-01-25T09:55:44Z",
      "side": 1,
      "message": "Done",
      "range": {
        "startLine": 101,
        "startChar": 0,
        "endLine": 103,
        "endChar": 5
      },
      "revId": "f7a5ff963cca5a950e0e72c5ef399d5be0ee0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "031b415c_6699d059",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 14
      },
      "lineNbr": 251,
      "author": {
        "id": 1012623
      },
      "writtenOn": "2017-01-21T01:47:02Z",
      "side": 1,
      "message": "this is sort of confusing, i\u0027m reading it as saying the default is to skip all validation on all branches?  But I guess the default behavior depends on what the user supplies for this param.  Would it make sense to say something like \u0027skip validation for the specified branch(es)\u0027?",
      "revId": "f7a5ff963cca5a950e0e72c5ef399d5be0ee0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "486b96ff_d88011e6",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 14
      },
      "lineNbr": 251,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-01-23T10:20:42Z",
      "side": 1,
      "message": "I think this is what is meant here:\n\nWhen skipGroup is non-empty and skipBranch is not defined then the validation is skipped for all branches if commit is pushed by a member of a group from the skipGroup list.\n\nMaybe it would help to say:\n\n  Default: skip validation on all branches for commits pushed by a member of a group listed in skipGroup\n\n?",
      "revId": "f7a5ff963cca5a950e0e72c5ef399d5be0ee0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "55430a08_3cf0ac7e",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 14
      },
      "lineNbr": 251,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2017-01-25T08:42:15Z",
      "side": 1,
      "message": "Yes, Saša is right. Let me amend by specifying the membership.",
      "revId": "f7a5ff963cca5a950e0e72c5ef399d5be0ee0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ac067367_de632bba",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 14
      },
      "lineNbr": 251,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2017-01-25T09:55:44Z",
      "side": 1,
      "message": "Done",
      "revId": "f7a5ff963cca5a950e0e72c5ef399d5be0ee0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "486b96ff_388f8514",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 14
      },
      "lineNbr": 275,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-01-23T10:20:42Z",
      "side": 1,
      "message": "by child\n\nor\n\nfrom parent",
      "range": {
        "startLine": 275,
        "startChar": 44,
        "endLine": 275,
        "endChar": 53
      },
      "revId": "f7a5ff963cca5a950e0e72c5ef399d5be0ee0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b8a5f9fa_246cb45d",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 14
      },
      "lineNbr": 275,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2017-01-25T08:42:15Z",
      "side": 1,
      "message": "\"from\" is the correct one.",
      "range": {
        "startLine": 275,
        "startChar": 44,
        "endLine": 275,
        "endChar": 53
      },
      "revId": "f7a5ff963cca5a950e0e72c5ef399d5be0ee0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f35b5c03_e12a1e41",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 14
      },
      "lineNbr": 275,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2017-01-25T09:55:44Z",
      "side": 1,
      "message": "Done",
      "range": {
        "startLine": 275,
        "startChar": 44,
        "endLine": 275,
        "endChar": 53
      },
      "revId": "f7a5ff963cca5a950e0e72c5ef399d5be0ee0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e8e9aa6a_42ddf220",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 14
      },
      "lineNbr": 285,
      "author": {
        "id": 1012623
      },
      "writtenOn": "2017-01-21T01:47:02Z",
      "side": 1,
      "message": "[optional] I would suggest adding another example showing how to use this with `branch` param because that can be confusing.  For example:\n\n\nA typical configuration would be to enable validation for a set of branches, while excluding a few of them.\n\n```\n   [plugin \"@PLUGIN@\"]\n       branch \u003d ^refs/heads/stable-.*\n       skipGroup \u003d release-manager\n       skipBranch \u003d refs/heads/stable-3.4\n       skipBranch \u003d refs/heads/stable-5.6\n```",
      "revId": "f7a5ff963cca5a950e0e72c5ef399d5be0ee0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "18e1f21c_fa1e4069",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 14
      },
      "lineNbr": 285,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2017-01-25T08:42:15Z",
      "side": 1,
      "message": "Yes, good idea.",
      "revId": "f7a5ff963cca5a950e0e72c5ef399d5be0ee0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cc99630a_35b1dac3",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 14
      },
      "lineNbr": 285,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2017-01-25T09:55:44Z",
      "side": 1,
      "message": "Done",
      "revId": "f7a5ff963cca5a950e0e72c5ef399d5be0ee0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2864a22d_17941627",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 14
      },
      "lineNbr": 294,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-01-23T10:20:42Z",
      "side": 1,
      "message": "List the skipGroup first as, without these, all other skip* are ignored.",
      "range": {
        "startLine": 293,
        "startChar": 0,
        "endLine": 294,
        "endChar": 33
      },
      "revId": "f7a5ff963cca5a950e0e72c5ef399d5be0ee0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f3b0f2a_63c8881e",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 14
      },
      "lineNbr": 294,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2017-01-25T08:42:15Z",
      "side": 1,
      "message": "I guess the order of the entries in the config are irrelevant isn\u0027t it?\nI wouldn\u0027t like to give the impression that they have to me mentioned *before* the others in the file.",
      "range": {
        "startLine": 293,
        "startChar": 0,
        "endLine": 294,
        "endChar": 33
      },
      "revId": "f7a5ff963cca5a950e0e72c5ef399d5be0ee0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed5a4a4a_7e8b9588",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 14
      },
      "lineNbr": 294,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-01-25T09:47:56Z",
      "side": 1,
      "message": "Yes, the order is technically not important. Still, often we try to keep the order in our configuration file(s) and source code in some systematic and intuitive way.\n\nI do not insist on this proposal, should have marked it as optional.",
      "revId": "f7a5ff963cca5a950e0e72c5ef399d5be0ee0e63",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}