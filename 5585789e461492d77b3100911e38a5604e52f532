{
  "comments": [
    {
      "key": {
        "uuid": "63d6bd38_161e9cda",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 5
      },
      "lineNbr": 274,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-01-16T06:56:24Z",
      "side": 1,
      "message": "As pointed out in my previous comment, the configuration in gerrit.config doesn\u0027t allow you fine grained control on validation disabling.\n\nHow can you achieve in the example above, the differentiation on the disabling of checks for two groups:\n\n* ldap/ReleaseManagers\n* ldap/GerritAdmins\n\nfor two different projects:\n\n* foo\n* bar\n\nfor two different validation kinds:\n\n* blockedFileExtension\n* blockedContentType\n\nfor two different branches:\n\n* foo-stable-42\n* bar-stable-42\n\netc. like two different directories...\n\nThat why you need to move the plugin disabling configuration in its own config file to not have to use [plugin \"@PLUGIN@\"], and to be able to say that:\n\n  [filter \"project:foo branch:foo-stable-42\"]\n    commiter \u003d ldap/ReleaseManagers\n    disable \u003d blockedFileExtension\n\n  [filter \"project:bar branch:bar-stable-42\"]\n    commiter \u003d ldap/GerritAdmins\n    disable \u003d blockedContentType",
      "revId": "5585789e461492d77b3100911e38a5604e52f532",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63d6bd38_96e86c85",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 5
      },
      "lineNbr": 274,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2017-01-16T07:22:16Z",
      "side": 1,
      "message": "\u003e As pointed out in my previous comment, the configuration in\n \u003e gerrit.config doesn\u0027t allow you fine grained control on validation\n \u003e disabling.\n\nI know, however, the plugin correctly uses project.config: changing it to its own customised config (uploadvalidator.config) would require:\n\n- support for older config as fallback\n- reimplementation of the inheritance across projects\n- code refactoring\n\nI would like us to agree on this substantial refactoring first, and then to split the work. Our first goal was simply a global config to disable checks for a Gerrit group ... and we are now talking about refactoring the configuration file :-)\n\nAll good, but it is now a different scope :-)\n\n \u003e \n \u003e How can you achieve in the example above, the differentiation on\n \u003e the disabling of checks for two groups:\n \u003e \n \u003e * ldap/ReleaseManagers\n \u003e * ldap/GerritAdmins\n \u003e \n \u003e for two different projects:\n \u003e \n \u003e * foo\n \u003e * bar\n\nIt isn\u0027t currently possible with the plugin to target different configuration on a per-branch basis.\n\nIt\u0027s all good, but it\u0027s a different change IMHO.\n\n \u003e \n \u003e for two different validation kinds:\n \u003e \n \u003e * blockedFileExtension\n \u003e * blockedContentType\n \u003e \n \u003e for two different branches:\n \u003e \n \u003e * foo-stable-42\n \u003e * bar-stable-42\n \u003e \n \u003e etc. like two different directories...\n \u003e \n \u003e That why you need to move the plugin disabling configuration in its\n \u003e own config file to not have to use [plugin \"@PLUGIN@\"], and to be\n \u003e able to say that:\n \u003e \n \u003e [filter \"project:foo branch:foo-stable-42\"]\n \u003e commiter \u003d ldap/ReleaseManagers\n \u003e disable \u003d blockedFileExtension\n \u003e \n \u003e [filter \"project:bar branch:bar-stable-42\"]\n \u003e commiter \u003d ldap/GerritAdmins\n \u003e disable \u003d blockedContentType\n\nYes, agreed and like it.\n\n@Saša what do you think?",
      "revId": "5585789e461492d77b3100911e38a5604e52f532",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63d6bd38_b65a4892",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 5
      },
      "lineNbr": 274,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2017-01-16T07:41:50Z",
      "side": 1,
      "message": "Apologies, I misread your comment.\n\nIt is actually possible to define your scenario with the current configuration system: every project has its own project.config with its own uploadvalidator policy associated.\n\nProject: foo (refs/meta/config:project.config)\n\n[plugin \"uploadvalidator\"]\n  skipBranch \u003d refs/heads/foo-stable-42\n  skipGroup \u003d ldap/ReleaseManagers\n  skipValidation \u003d blockedFileExtension\n\nProject: bar (refs/meta/config:project.config)\n\n[plugin \"uploadvalidator\"]\n  skipBranch \u003d refs/heads/bar-stable-42\n  skipGroup \u003d ladp/GerritAdmins\n  skipValidation \u003d blockedContentType\n\nWhat isn\u0027t possible is to block two type of validations for two different groups on two different branches on the *same* project.\n\nDo you have such a use-case?\n(you or Saša)\n\nAgain, the one we have is much simpler and global than that.",
      "revId": "5585789e461492d77b3100911e38a5604e52f532",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43d37948_5542cca6",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 5
      },
      "lineNbr": 274,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-01-16T12:24:04Z",
      "side": 1,
      "message": "This shows the limitation(s) of storing plugin config inside the project.config. We would need to invent new keywords like:\n\n  skipGroupForBlockedFileExtention \u003d ldap/GerritAdmins\n\nand this would become very ugly.\n\nIt looks like skipBranch/Group/Validation from project.config would be possible to easily migrate to a new format. If this feature is urgent for Luca then I am fine with it for now.",
      "revId": "5585789e461492d77b3100911e38a5604e52f532",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63d6bd38_56e77491",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 5
      },
      "lineNbr": 274,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-01-16T12:24:04Z",
      "side": 1,
      "message": "Refactoring the plugin to use own configuration file is something that probably needs to be done yesterday :-) considering how many options are available.\n\nDifferently from the reviewers.config in the reviewers plugin which is a global configuration under etc/reviewrs.config, the uploadvalidator.config would exist under refs/meta/config:uploadvalidator.config.\n\nThe discussion on the format of the uploadvalidator.config is something that deserves own change and discussion and shouldn\u0027t be done as a side effect of this change, IMO. For example I am not sure that the proposed format is the best one as uploadvalidator.config is already project local and having a project:xxx in the filter seems redundant and confusing. Maybe we need a fully different format where config sections are named after validation checks:\n\n  [blockFileExtension \"branch:foo\"]\n    skip \u003d Administrators\n  [blockedContentType]\n    binaryType \u003d application/zip\n    binaryType \u003d ...\n\netc... However, let\u0027s discuss that new format in its own change.\n\nAnother thing to keep in mind is that when we move a plugin\u0027s own config file then we will have to write\nown GWT UI code for the general preferences page. The auto-generated UI code works only for plugin config which is stored in the project.config, unless I missed something in the newer development.",
      "revId": "5585789e461492d77b3100911e38a5604e52f532",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}