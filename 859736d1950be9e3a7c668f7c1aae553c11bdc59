{
  "comments": [
    {
      "key": {
        "uuid": "417b0d8a_e983f5db",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 20
      },
      "lineNbr": 61,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-01-26T15:27:54Z",
      "side": 1,
      "message": "I didn\u0027t really propose to inline this code here :-(\n\nThe previous version was easier to read. For example:\n\n  isMatchingRefPatterns(...) \u0026\u0026 !canSkipValidation( ...)\n\nIf I look at this code 2 weeks from now I am sure I will need a few minutes to grasp it again.",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 61,
        "endChar": 38
      },
      "revId": "859736d1950be9e3a7c668f7c1aae553c11bdc59",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aafe5772_79dda4f3",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 20
      },
      "lineNbr": 61,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2017-01-26T16:30:10Z",
      "side": 1,
      "message": "I have separated the conditions in 3 groups:\n1. valid config\n2. ref matching\n3. skip rules that are checked with short-circuit on:\n   a. skipGroup (exist or not)\n   b. skipValidation \n   c. skipRef\n   d. skipOnGroup ownership\n\nshould I just separate into three different methods so that can be more easily readable?",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 61,
        "endChar": 38
      },
      "revId": "859736d1950be9e3a7c668f7c1aae553c11bdc59",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8c764290_ac052020",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 20
      },
      "lineNbr": 61,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-01-26T16:37:10Z",
      "side": 1,
      "message": "\u003e should I just separate into three different methods so that can be more easily readable?\n\nI believe that this would help in understanding this code.",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 61,
        "endChar": 38
      },
      "revId": "859736d1950be9e3a7c668f7c1aae553c11bdc59",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9cd943a2_80c85649",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 20
      },
      "lineNbr": 61,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-01-26T16:37:35Z",
      "side": 1,
      "message": "I wonder if commenting the current implementation blocks, as in your description above would make this condition easier readable and understandable?",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 61,
        "endChar": 38
      },
      "revId": "859736d1950be9e3a7c668f7c1aae553c11bdc59",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c349ca69_724fed0c",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 20
      },
      "lineNbr": 66,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-01-26T15:27:54Z",
      "side": 1,
      "message": "what about validating the \"skipValidation\" configuration?",
      "revId": "859736d1950be9e3a7c668f7c1aae553c11bdc59",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "29069469_439dc029",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 20
      },
      "lineNbr": 66,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2017-01-26T16:30:10Z",
      "side": 1,
      "message": "we do pure string matching on that: would you expect something different? Do you want to introduce an Enum on validation types?\n\nI would avoid to make this change even bigger: IMHO it is best to get this closed and then refactor the validation types into an enum and put proper validation in place for it.",
      "revId": "859736d1950be9e3a7c668f7c1aae553c11bdc59",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e399b33d_c2797103",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 20
      },
      "lineNbr": 66,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-01-26T16:37:10Z",
      "side": 1,
      "message": "OK, fine. This is not critical. Let\u0027s do it in a follow-up change.",
      "revId": "859736d1950be9e3a7c668f7c1aae553c11bdc59",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "daeab4e2_8f18a6ec",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 20
      },
      "lineNbr": 66,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-01-26T16:37:35Z",
      "side": 1,
      "message": "I think that any data structure changes is beyond scope of this change. I think what Sasa is asking is to check against valid validation names. But once introduced, and not refactored to enum, as Luca suggesting, it would easy to forget to add yet another check when new validation check are added, so that they would be leaved not checked.",
      "revId": "859736d1950be9e3a7c668f7c1aae553c11bdc59",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ab39a03_4d697527",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 20
      },
      "lineNbr": 66,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-01-26T16:42:41Z",
      "side": 1,
      "message": "What I\u0027ve found hard to see in understanding of that condition, is a subtle fact, that:\n\n  matchCriteria(conf, \"skipRef\", refName, true)\n\nwould return true when this section is missing in the config file. So may be renaming this method to something more clear stating this fact:\n\n  matchCriteriaOrTrueIfMissing\n\nJust my thoughts.",
      "revId": "859736d1950be9e3a7c668f7c1aae553c11bdc59",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "26caa295_f2352ed9",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 20
      },
      "lineNbr": 66,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-01-27T08:42:19Z",
      "side": 1,
      "message": "Well, for me a self-explaining method name would be more intuitive.\nCompare:\n\n  /* 1 */ matchCriteria(conf, \"skipRef\", refName, true);\n  /* 2 */ matchCriteriaOrTrueIfMissing(conf, \"skipRef\", refName, true);\n\nwith:\n\n  /* 3 */ canSkipRef(conf, refName);\n\nThe canSkipRef returns true if the configuration allows skipping that ref\neither by having an empty skipRef list or by having a non-empty list which includes the given refName.",
      "revId": "859736d1950be9e3a7c668f7c1aae553c11bdc59",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79b56610_2860b27d",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 20
      },
      "lineNbr": 66,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-01-27T08:42:19Z",
      "side": 1,
      "message": "OK, no further data structure changes in this change :-)",
      "revId": "859736d1950be9e3a7c668f7c1aae553c11bdc59",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a4b04dc_1047e95b",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 20
      },
      "lineNbr": 66,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-01-27T09:42:32Z",
      "side": 1,
      "message": "I agree. Let me upload a minor modification here.",
      "revId": "859736d1950be9e3a7c668f7c1aae553c11bdc59",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d2d24a3f_8c5ffcc0",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 20
      },
      "lineNbr": 66,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-01-27T09:52:20Z",
      "side": 1,
      "message": "Done",
      "revId": "859736d1950be9e3a7c668f7c1aae553c11bdc59",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0f22830_20f8b210",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 20
      },
      "lineNbr": 94,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-01-26T16:42:41Z",
      "side": 1,
      "message": "That\u0027s tricky.",
      "range": {
        "startLine": 94,
        "startChar": 6,
        "endLine": 94,
        "endChar": 20
      },
      "revId": "859736d1950be9e3a7c668f7c1aae553c11bdc59",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dfbd1d7e_e30b19fe",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 20
      },
      "lineNbr": 295,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-01-26T16:08:38Z",
      "side": 1,
      "message": "ref?",
      "range": {
        "startLine": 295,
        "startChar": 7,
        "endLine": 295,
        "endChar": 13
      },
      "revId": "859736d1950be9e3a7c668f7c1aae553c11bdc59",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "033e7f51_152032fc",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 20
      },
      "lineNbr": 295,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2017-01-26T16:26:11Z",
      "side": 1,
      "message": "Good catch, let me fix it.",
      "range": {
        "startLine": 295,
        "startChar": 7,
        "endLine": 295,
        "endChar": 13
      },
      "revId": "859736d1950be9e3a7c668f7c1aae553c11bdc59",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}