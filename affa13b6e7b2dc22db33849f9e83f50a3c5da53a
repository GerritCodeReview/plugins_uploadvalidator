{
  "comments": [
    {
      "key": {
        "uuid": "d09a2171_8a2ec920",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 19
      },
      "lineNbr": 55,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-01-25T13:05:55Z",
      "side": 1,
      "message": "Why don\u0027t you reuse this method also for matching the skipRef?\nWhy use something called matchCriteria to evaluate matching of \"skipRef\" setting and using isMatchingRefPatters to evaluate the \"ref\" settings?",
      "revId": "affa13b6e7b2dc22db33849f9e83f50a3c5da53a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b63faa4_7a7cc086",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 19
      },
      "lineNbr": 55,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2017-01-25T23:08:28Z",
      "side": 1,
      "message": "Good point, however the current block has an additional \"isValid()\" that I would need to introduce somehow.\n\nNot sure if I will end up adding as much code as before, need to give it a try.",
      "revId": "affa13b6e7b2dc22db33849f9e83f50a3c5da53a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3548d18c_9bba991f",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 19
      },
      "lineNbr": 79,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-01-25T13:05:55Z",
      "side": 1,
      "message": "Write this as:\n\n  return matchCriteria(conf, \"skipValidation\", validation, false)\n      \u0026\u0026 matchCriteria(conf, \"skipRef\", refName, true)\n      \u0026\u0026 canSkipOnGroup(conf);\n\nThis avoids two negation operators and is easier to read.",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 79,
        "endChar": 32
      },
      "revId": "affa13b6e7b2dc22db33849f9e83f50a3c5da53a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9594796_c1f17d68",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 19
      },
      "lineNbr": 79,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2017-01-25T23:08:28Z",
      "side": 1,
      "message": "Done",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 79,
        "endChar": 32
      },
      "revId": "affa13b6e7b2dc22db33849f9e83f50a3c5da53a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d590c40c_53cfc37a",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 19
      },
      "lineNbr": 86,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-01-25T13:05:55Z",
      "side": 1,
      "message": "Once the isMatchingRefPatterns is used for \"skipRef\" matching, this method will only be used for the \"skipValidation\" matching. Then the allowRegex parameter can be removed and the method can be named more specifically, for example: isMatchingSkipValidation or something like that.",
      "range": {
        "startLine": 86,
        "startChar": 18,
        "endLine": 86,
        "endChar": 31
      },
      "revId": "affa13b6e7b2dc22db33849f9e83f50a3c5da53a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cfd1593b_3a719670",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 19
      },
      "lineNbr": 86,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-01-25T13:05:55Z",
      "side": 1,
      "message": "b",
      "range": {
        "startLine": 86,
        "startChar": 10,
        "endLine": 86,
        "endChar": 11
      },
      "revId": "affa13b6e7b2dc22db33849f9e83f50a3c5da53a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42233422_152c146d",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 19
      },
      "lineNbr": 86,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2017-01-25T23:08:28Z",
      "side": 1,
      "message": "Not really, because the two methods would still be 99% identical. Much better to keep the matchCriteria and use it for any type of matching, with regex or not.",
      "range": {
        "startLine": 86,
        "startChar": 18,
        "endLine": 86,
        "endChar": 31
      },
      "revId": "affa13b6e7b2dc22db33849f9e83f50a3c5da53a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06897890_875aff71",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 19
      },
      "lineNbr": 86,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2017-01-25T23:08:28Z",
      "side": 1,
      "message": "b?",
      "range": {
        "startLine": 86,
        "startChar": 10,
        "endLine": 86,
        "endChar": 11
      },
      "revId": "affa13b6e7b2dc22db33849f9e83f50a3c5da53a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0254837_c6f1e000",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 19
      },
      "lineNbr": 86,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-01-26T13:13:00Z",
      "side": 1,
      "message": "This was means to replace Boolean with boolean",
      "range": {
        "startLine": 86,
        "startChar": 10,
        "endLine": 86,
        "endChar": 11
      },
      "revId": "affa13b6e7b2dc22db33849f9e83f50a3c5da53a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ac4125f_7e4dc360",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/ValidatorConfig.java",
        "patchSetId": 19
      },
      "lineNbr": 86,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-01-26T13:13:00Z",
      "side": 1,
      "message": "\u003e Not really, because the two methods would still be 99% identical.\n\nThe point is that allowRegex doesn\u0027t change for during the complete matchCriteria method execution. Means that, for every loop iteration,\nit will always execute the same code: either the match(...) or the equals(...).\n\nBy using the allowRegex in the matchCriteria you are basically reusing\nthe for loop. I don\u0027t think this is a real code reuse. We often have several methods in the same class looping over the same data and this is not an issue.\n\n \u003e Much better to keep the matchCriteria and use it for any type of\n \u003e matching, with regex or not.\n\nI don\u0027t really see why this is much better, but will not give -1 because it might be just a personal preference.",
      "range": {
        "startLine": 86,
        "startChar": 18,
        "endLine": 86,
        "endChar": 31
      },
      "revId": "affa13b6e7b2dc22db33849f9e83f50a3c5da53a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}