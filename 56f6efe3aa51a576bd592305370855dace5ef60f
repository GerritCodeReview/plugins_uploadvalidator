{
  "comments": [
    {
      "key": {
        "uuid": "63e15de4_1e036d87",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 1
      },
      "lineNbr": 237,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-01-13T09:09:07Z",
      "side": 1,
      "message": "We had a different idea on implementing the override logic, just that no one started working on it yet.\n\nThe idea was to use Git notes on a dedicated notes branch, to manage override for particular commits. One note is an override permission for one commit.\n\nAssume the dedicated notes branch is named refs/notes/uploadvalidator/override, a developer needs to push a commit with SHA1\u003dc0ffee.. and that commit doesn\u0027t pass the uploadvalidator validations. In that case a project lead, one who has\npermissions to push to the refs/notes/uploadvalidator/*, creates\na note on the c0ffee SHA1 (in the note content he may write the reason\nfor approving the exception) and pushes that note to Gerrit.\n\nThe uploadvalidator plugin first checks existence of a override note for the received commit. If such a note is present it skips all validations.\n\nThis approach has some advantages:\n* all exceptions are well documented and we also know who created them\n* no need for a new access permission. We use the Push permission on the refs/notes/uploadvalidator/override to control who can approve overrides\n\nWhat do you think?",
      "range": {
        "startLine": 227,
        "startChar": 0,
        "endLine": 237,
        "endChar": 40
      },
      "revId": "56f6efe3aa51a576bd592305370855dace5ef60f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63e15de4_de20251a",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 1
      },
      "lineNbr": 237,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-01-13T09:11:59Z",
      "side": 1,
      "message": "To add one more advantage:\n\n* We don\u0027t need to assign \"override upload permission\" to a developer who needs to push one such commit and them remember to immediately revoke that permission",
      "range": {
        "startLine": 227,
        "startChar": 0,
        "endLine": 237,
        "endChar": 40
      },
      "revId": "56f6efe3aa51a576bd592305370855dace5ef60f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83d8113c_5fb96b89",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 1
      },
      "lineNbr": 237,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2017-01-13T09:21:41Z",
      "side": 1,
      "message": "I think your idea makes sense and adds a more granular ad-hoc override mechanism.\n\nHowever, I would keep the ability to \"globally unlock\" all the upload permissions for admin purposes. Then simply check if the current user is administrator?",
      "range": {
        "startLine": 227,
        "startChar": 0,
        "endLine": 237,
        "endChar": 40
      },
      "revId": "56f6efe3aa51a576bd592305370855dace5ef60f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83d8113c_1fd603a9",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 1
      },
      "lineNbr": 237,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-01-13T10:45:31Z",
      "side": 1,
      "message": "A problem with the global unlock is that it is really global. If a user gets the \"Override Upload Validation\" capability then this applies to *all* projects for that user and this user can then upload changes to unrelated project(s) and skip all upload validation logic.\n\nI think that having a kind of (project,user) or (project,group) level unlock is what you really need? Right now I don\u0027t have a good proposal how to implement it but I will think about it.",
      "range": {
        "startLine": 227,
        "startChar": 0,
        "endLine": 237,
        "endChar": 40
      },
      "revId": "56f6efe3aa51a576bd592305370855dace5ef60f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83d8113c_5fd08ba9",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 1
      },
      "lineNbr": 237,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2017-01-13T10:57:08Z",
      "side": 1,
      "message": "Is it possible to define a plugin-specific permission that is not global? (not a GlobalCpability but a custom permission)",
      "range": {
        "startLine": 227,
        "startChar": 0,
        "endLine": 237,
        "endChar": 40
      },
      "revId": "56f6efe3aa51a576bd592305370855dace5ef60f",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}