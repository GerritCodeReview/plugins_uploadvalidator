{
  "comments": [
    {
      "key": {
        "uuid": "5726d302_382548f0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2018-02-09T15:58:19Z",
      "side": 1,
      "message": "Two nits:\n- commit messages tend to wrap to a wider width (e.g. 72 columns)\n- can you give more detail about the use case? E.g. is this about preventing typos in the author field of commits by people with \"Forge Author\" permission? Adding some detail would ensure people in the future have a better sense of what not to break when further modifying this code.",
      "revId": "8e4c460ba1f41e504aabc418edd98320580ed7d7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93338ba4_4472195a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2018-02-09T15:58:19Z",
      "side": 1,
      "message": "Feature: Issue 8343",
      "revId": "8e4c460ba1f41e504aabc418edd98320580ed7d7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb5593b2_f262c92d",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/EmailDomainWhitelistValidator.java",
        "patchSetId": 1
      },
      "lineNbr": 119,
      "author": {
        "id": 1019328
      },
      "writtenOn": "2018-02-08T22:53:24Z",
      "side": 1,
      "message": "Usually not good practice to catch a NPE... What about setting the string to empty if null? And may be modifying a bit the try... catch? :\n\n    try {\n      URI uri \u003d new URI(Strings.nullToEmpty(email));\n      return emailDomainWhitelist.contains(uri.getHost());\n    } catch (URISyntaxException e) {\n      return false;\n    }\n\nGiven the way the list is created, we shouldn\u0027t expect it to be null",
      "range": {
        "startLine": 119,
        "startChar": 34,
        "endLine": 119,
        "endChar": 54
      },
      "revId": "8e4c460ba1f41e504aabc418edd98320580ed7d7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f69d4163_3b0aa7e6",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/EmailDomainWhitelistValidator.java",
        "patchSetId": 1
      },
      "lineNbr": 119,
      "author": {
        "id": 1056342
      },
      "writtenOn": "2018-02-09T23:53:55Z",
      "side": 1,
      "message": "Ya, I agree fully with you.\nI did end up changing this completely in the latest patchset(SP3), after looking deeper into the email-specific validations, I changed it to match that pattern used. Makes this a lot cleaner and we get a little additional functionality with the regex/pattern matching.",
      "parentUuid": "bb5593b2_f262c92d",
      "range": {
        "startLine": 119,
        "startChar": 34,
        "endLine": 119,
        "endChar": 54
      },
      "revId": "8e4c460ba1f41e504aabc418edd98320580ed7d7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8108f9fb_0b491782",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1019952
      },
      "writtenOn": "2018-02-09T01:43:23Z",
      "side": 1,
      "message": "How is this different from https://gerrit.googlesource.com/plugins/uploadvalidator/+/master/src/main/resources/Documentation/config.md#email_specific-validations?",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 41,
        "endChar": 27
      },
      "revId": "8e4c460ba1f41e504aabc418edd98320580ed7d7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44880017_9ab405ac",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2018-02-09T03:40:14Z",
      "side": 1,
      "message": "Good question. Nicholas, can you add some more detail here?\n\nE.g. is the commit author or the committer supposed to match this domain? What is an example scenario where this would be used?\n\nA name like requiredAuthorEmailPattern or requiredCommitterEmailPattern for the config item might also be useful for making this clearer as well.\n\nCan this take a regex instead of a domain, like the e-mail specific validations do?",
      "parentUuid": "8108f9fb_0b491782",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 41,
        "endChar": 27
      },
      "revId": "8e4c460ba1f41e504aabc418edd98320580ed7d7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "16a3f08c_03195843",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1056342
      },
      "writtenOn": "2018-02-09T23:53:55Z",
      "side": 1,
      "message": "From what I understand that just allows you to filter running the validation by an email address. Not having a listed email domain or address will just not run any validation, but nothing is rejected.\n\nThe intention of the email whitelist validator is to allow only emails with their domains listed. Not having a listed domain will result in the push being rejected.\n\nThis is what I gathered from the docs, if I\u0027m wrong or misinterpreting this feel free to correct me.",
      "parentUuid": "44880017_9ab405ac",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 41,
        "endChar": 27
      },
      "revId": "8e4c460ba1f41e504aabc418edd98320580ed7d7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5365b65d_71506ee6",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1019952
      },
      "writtenOn": "2018-02-09T23:58:37Z",
      "side": 1,
      "message": "Ah, got it. Makes sense.",
      "parentUuid": "16a3f08c_03195843",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 41,
        "endChar": 27
      },
      "revId": "8e4c460ba1f41e504aabc418edd98320580ed7d7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e7be74a_820942d4",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/uploadvalidator/EmailDomainWhitelistTest.java",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1019328
      },
      "writtenOn": "2018-02-08T22:53:24Z",
      "side": 1,
      "message": "Add a test to validate the handling of a null email?",
      "revId": "8e4c460ba1f41e504aabc418edd98320580ed7d7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a67b68e_a9300167",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/uploadvalidator/EmailDomainWhitelistTest.java",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1056342
      },
      "writtenOn": "2018-02-09T23:53:55Z",
      "side": 1,
      "message": "That\u0027s a good point, I added the test case in PS3.",
      "parentUuid": "4e7be74a_820942d4",
      "revId": "8e4c460ba1f41e504aabc418edd98320580ed7d7",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}