{
  "comments": [
    {
      "key": {
        "uuid": "68b593db_84489e67",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1003873
      },
      "writtenOn": "Feb 6, 2017 5:38:06 AM",
      "side": 1,
      "message": "This was also my idea at the moment when we were writing this code, and I agree with you.\n\nHowever, our users wanted it applied to the entire content arguing that if there is a blocked keyword and that file needs to be modified then it is the time to remove all blocked keywords anyway.\n\nI think we must make this configurable.",
      "revId": "4d5baa8a84395cb58293c4644b02e567fa577309",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0cb0d64_24f0e83c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1006192
      },
      "writtenOn": "Feb 7, 2017 4:25:51 AM",
      "side": 1,
      "message": "Agreed, and it really varies from project to project. Some of them may have the \"block everything policy\" and others may just want to block the amended content.\n\nWhat about a config setting like:\nblockKeywordScope \u003d file | change\n\nBy default scope would be file (entire file content) to be 100% backward compatible. However, people may want to override this setting at project level and say blockKeywordScope \u003d change, to enable checking only the delta content.",
      "parentUuid": "68b593db_84489e67",
      "revId": "4d5baa8a84395cb58293c4644b02e567fa577309",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f49513f9_7139a979",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1003873
      },
      "writtenOn": "Feb 7, 2017 4:52:53 AM",
      "side": 1,
      "message": "\u003e What about a config setting like:\n \u003e blockKeywordScope \u003d file | change\n\nOr\n\n  file | diff\n\n?\n\nThere are other validators which would also need the same scope setting (for example the windows-line-endings validator).\nCan we assume that one scope definition will be enough for all validators and name the parameter just \"scope\"?\n\n  scope \u003d file\n\nI guess that no team will want validator A in one scope and validator B in another,\n\n \u003e \n \u003e By default scope would be file (entire file content) to be 100%\n \u003e backward compatible. However, people may want to override this\n \u003e setting at project level and say blockKeywordScope \u003d change, to\n \u003e enable checking only the delta content.",
      "parentUuid": "b0cb0d64_24f0e83c",
      "revId": "4d5baa8a84395cb58293c4644b02e567fa577309",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15373214_209c28de",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1012623
      },
      "writtenOn": "Feb 4, 2017 11:00:44 PM",
      "side": 1,
      "message": "link to issue 5353 ?\n\n  https://bugs.chromium.org/p/gerrit/issues/detail?id\u003d5353",
      "revId": "4d5baa8a84395cb58293c4644b02e567fa577309",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "49e26f5c_5d2fed30",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1006192
      },
      "writtenOn": "Feb 6, 2017 5:10:24 AM",
      "side": 1,
      "message": "Done",
      "parentUuid": "15373214_209c28de",
      "revId": "4d5baa8a84395cb58293c4644b02e567fa577309",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "982a148a_ee960e12",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/BlockedKeywordValidator.java",
        "patchSetId": 1
      },
      "lineNbr": 166,
      "author": {
        "id": 1012623
      },
      "writtenOn": "Feb 4, 2017 11:00:44 PM",
      "side": 1,
      "message": "CommitUtils.getFilesEditList can return a null for editList, you\u0027ll need to add a check for it here.\n\n  if (editList \u003d\u003d null || editList.isEmpty())",
      "revId": "4d5baa8a84395cb58293c4644b02e567fa577309",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "002b020d_6cb33ae6",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/BlockedKeywordValidator.java",
        "patchSetId": 1
      },
      "lineNbr": 166,
      "author": {
        "id": 1006192
      },
      "writtenOn": "Feb 6, 2017 5:09:56 AM",
      "side": 1,
      "message": "You mean for renames or deletion?",
      "parentUuid": "982a148a_ee960e12",
      "revId": "4d5baa8a84395cb58293c4644b02e567fa577309",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bc347e2a_f855450d",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/uploadvalidator/BlockedKeywordValidator.java",
        "patchSetId": 1
      },
      "lineNbr": 166,
      "author": {
        "id": 1012623
      },
      "writtenOn": "Feb 6, 2017 3:37:34 PM",
      "side": 1,
      "message": "I\u0027m referring to CommitUtils.getEditList() method.  It looks like that method will set this editList to null for a few different conditions.  I\u0027m seeing it when using binary files.",
      "parentUuid": "002b020d_6cb33ae6",
      "revId": "4d5baa8a84395cb58293c4644b02e567fa577309",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}